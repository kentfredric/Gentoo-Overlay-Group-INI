.\" Automatically generated by Pod::Man 2.26 (Pod::Simple 3.22)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Gentoo::Overlay::Group::INI 3"
.TH Gentoo::Overlay::Group::INI 3 "2012-06-22" "perl v5.16.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Gentoo::Overlay::Group::INI \- Load a list of overlays defined in a configuration file.
.SH "VERSION"
.IX Header "VERSION"
version 0.2.1
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
Generates a \f(CW\*(C`Gentoo::Overlay::\f(CBGroup\f(CW\*(C'\fR object using a configuration file from your environment.
.PP
.Vb 2
\&  require Gentoo::Overlay::Group::INI;
\&  my $group = Gentoo::Overlay::Group::INI\->load();
.Ve
.PP
Currently, the following paths are checked:
.PP
.Vb 6
\&  ~/.config/Perl/Gentoo\-Overlay\-Group\-INI/config.ini #  \*(Aqmy_dist_config\*(Aq dir
\&  ~/.config/Perl/Gentoo\-Overlay\-Group\-INI/Gentoo\-Overlay\-Group\-INI.ini
\&  ~/.local/share/Perl/dist/Gentoo\-Overlay\-Group\-INI/config.ini  # \*(Aqmy_dist_data\*(Aq dir
\&  ~/.local/share/Perl/dist/Gentoo\-Overlay\-Group\-INI/Gentoo\-Overlay\-Group\-INI.ini
\&  /etc/Gentoo\-Overlay\-Group\-INI/config.ini
\&  /etc/Gentoo\-Overlay\-Group\-INI/Gentoo\-Overlay\-Group\-INI.ini
.Ve
.PP
If you have set \f(CW\*(C`GENTOO_OVERLAY_GROUP_INI_PATH\*(C'\fR, it will be split by \f(CW\*(C`\f(CB:\f(CW\*(C'\fR and each part scanned:
.PP
.Vb 1
\&  $ENV{GENTOO_OVERLAY_GROUP_INI_PATH} = "/a:/b"
\&
\&  /a/config.ini
\&  /a/Gentoo\-Overlay\-Group\-INI.ini
\&  /b/config.ini
\&  /b/Gentoo\-Overlay\-Group\-INI.ini
.Ve
.PP
If any of the path parts start with \f(CW\*(C`~/\*(C'\fR , those parts will be expanded to your \*(L"Home\*(R" directory.
.PP
Format of the \s-1INI\s0 files is as follows:
.PP
.Vb 3
\&  [Overlays]
\&  directory = /usr/portage
\&  directory = /usr/local/portage
.Ve
.SH "CLASS METHODS"
.IX Header "CLASS METHODS"
.SS "load"
.IX Subsection "load"
Returns a working Overlay::Group object.
.PP
.Vb 1
\&  my $group = Gentoo::Overlay::Group::INI\->load();
.Ve
.SS "load_named"
.IX Subsection "load_named"
Return an inflated arbitrary section:
.PP
.Vb 5
\&  # A "self\-named" overlay section
\&  my $section = Gentoo::Overlay::Group::INI\->load_named(\*(AqOverlay\*(Aq);
\&  # A \*(Aqcustom named overlay section, ie:
\&  # [ Overlay / foo ]
\&  my $section = Gentoo::Overlay::Group::INI\->load_named(\*(Aqfoo\*(Aq);
.Ve
.SS "load_all_does"
.IX Subsection "load_all_does"
Return all sections in a config file that \f(CW\*(C`do\*(C'\fR the given role.
.PP
.Vb 1
\&  my ( @sections ) = Gentoo::Overlay::Group::INI\->load_all_does(\*(AqSome::Role\*(Aq);
.Ve
.SS "load_all_isa"
.IX Subsection "load_all_isa"
Return all sections in a config file that inherit the given class.
.PP
.Vb 1
\&  my ( @sections ) = Gentoo::Overlay::Group::INI\->load_all_isa(\*(AqGentoo::Overlay::Group::Section::Overlay\*(Aq);
.Ve
.SH "PACKAGE VARIABLES"
.IX Header "PACKAGE VARIABLES"
.ie n .SS "$CFG_PATHS"
.el .SS "\f(CW$CFG_PATHS\fP"
.IX Subsection "$CFG_PATHS"
An array ref of Path::Class::Dir objects to scan for config files.
.SH "PRIVATE FUNCTIONS"
.IX Header "PRIVATE FUNCTIONS"
.SS "_cf_paths"
.IX Subsection "_cf_paths"
Fetch \f(CW$CFG_PATHS\fR, and initialize \f(CW$CFG_PATHS\fR if it isn't initialized.
.PP
.Vb 1
\&  my $path_list = _cf_paths();
.Ve
.SS "_init_cf_paths"
.IX Subsection "_init_cf_paths"
Return the hard-coded array ref of paths to use, or parses \f(CW$ENV{GENTOO_OVERLAY_GROUP_INI_PATH}\fR.
.PP
.Vb 1
\&  my $path_list = _init_cf_paths();
.Ve
.SS "_enumerate_file_list"
.IX Subsection "_enumerate_file_list"
Returns a list of file paths to check, in the order they should be checked.
.PP
.Vb 1
\&  my @list = _enumerate_file_list();
.Ve
.SS "_first_config_file"
.IX Subsection "_first_config_file"
Returns the path to the first file that exists.
.PP
.Vb 1
\&  my $first = _first_config_file();
.Ve
.SH "PRIVATE METHODS"
.IX Header "PRIVATE METHODS"
.SS "_parse"
.IX Subsection "_parse"
.SH "AUTHOR"
.IX Header "AUTHOR"
Kent Fredric <kentnl@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2012 by Kent Fredric <kentnl@cpan.org>.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
